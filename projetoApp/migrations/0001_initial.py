# Generated by Django 4.2.16 on 2025-02-15 21:59

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.br.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('username', models.CharField(blank=True, default='', max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('validated', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topico', models.CharField(max_length=255, null=True, verbose_name='Tópico')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateField(default=datetime.date.today, verbose_name='Data Criação')),
                ('horario_inicio', models.TimeField(blank=True, null=True, verbose_name='Horário Início')),
                ('horario_fim', models.TimeField(blank=True, null=True, verbose_name='Horário Fim')),
                ('capacidade_maxima', models.PositiveIntegerField(default=0, help_text='Número máximo de pessoas na atividade', verbose_name='Capacidade Máxima')),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tema', models.CharField(default='Evento', max_length=255, verbose_name='Tema')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data', models.DateField(default=datetime.date.today, verbose_name='Data')),
                ('horario_inicio', models.TimeField(blank=True, default='8:00', verbose_name='Horario Inicio')),
                ('horario_fim', models.TimeField(blank=True, default='18:00', verbose_name='Horario Fim')),
                ('logradouro', models.CharField(default='R. Pref. Brásílio Ribas, 775', max_length=255, verbose_name='Logradouro')),
                ('bairro', models.CharField(default='São José', max_length=255, verbose_name='Bairro')),
                ('cidade', models.CharField(default='Ponta Grossa', max_length=50, verbose_name='Cidade')),
                ('estado', models.CharField(default='Paraná', max_length=50, verbose_name='UF')),
                ('banner', models.URLField(blank=True, verbose_name='Banner')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('sobrenome', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('CPF', localflavor.br.models.BRCPFField(max_length=14)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projetoApp.usuario')),
            ],
            bases=('projetoApp.usuario',),
        ),
        migrations.CreateModel(
            name='Participante',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projetoApp.usuario')),
            ],
            bases=('projetoApp.usuario',),
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projetoApp.usuario')),
            ],
            bases=('projetoApp.usuario',),
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataHora', models.DateTimeField(verbose_name='Horario')),
                ('confirmado', models.BooleanField()),
                ('evento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.evento')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projetoApp.participante')),
            ],
        ),
        migrations.CreateModel(
            name='Convite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emailDst', models.EmailField(max_length=254, verbose_name='Email')),
                ('mensagem', models.TextField(blank=True, verbose_name='Mensagem')),
                ('atividade', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.atividade')),
            ],
        ),
        migrations.CreateModel(
            name='Certificado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataEmissao', models.DateField(verbose_name='Data Emissão')),
                ('codigo', models.CharField(blank=True, max_length=255, verbose_name='Código')),
                ('evento', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.evento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projetoApp.usuario')),
            ],
        ),
        migrations.AddField(
            model_name='atividade',
            name='evento',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.evento'),
        ),
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataHora', models.DateTimeField(verbose_name='Horario')),
                ('atividade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.atividade')),
                ('inscricao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.inscricao')),
                ('aluno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataAvaliacao', models.DateField(verbose_name='Data Avaliação')),
                ('descricao', models.TextField(verbose_name='Decrição')),
                ('atividade', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='projetoApp.atividade')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projetoApp.aluno')),
            ],
        ),
        migrations.AddField(
            model_name='atividade',
            name='alunos',
            field=models.ManyToManyField(to='projetoApp.aluno', verbose_name='Alunos'),
        ),
        migrations.AddField(
            model_name='atividade',
            name='participantes',
            field=models.ManyToManyField(to='projetoApp.participante', verbose_name='Participantes'),
        ),
        migrations.AddField(
            model_name='atividade',
            name='professores',
            field=models.ManyToManyField(to='projetoApp.professor', verbose_name='Professores'),
        ),
    ]
